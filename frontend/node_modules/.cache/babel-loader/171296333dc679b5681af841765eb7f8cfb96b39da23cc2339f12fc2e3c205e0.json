{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ianta\\\\interior_design\\\\interior_design\\\\frontend\\\\src\\\\img_output\\\\ClientImgOut.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageComponent() {\n  _s();\n  const [imageURL, setImageURL] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  useEffect(() => {\n    const getImage = async () => {\n      try {\n        if (!selectedFile) {\n          console.error(\"No file selected.\");\n          return;\n        }\n        const formData = new FormData();\n        formData.append(\"image\", selectedFile);\n        const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          const imageBlob = await response.blob();\n          setImageURL(URL.createObjectURL(imageBlob));\n        } else {\n          console.error(\"Error retrieving image:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"Error retrieving image:\", error);\n      }\n    };\n    getImage();\n  }, [selectedFile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"Server Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageComponent, \"C2iIeEefAia+TRV8lonVJ4AP2fU=\");\n_c = ImageComponent;\nexport default ImageComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","ImageComponent","_s","imageURL","setImageURL","selectedFile","setSelectedFile","fileInputRef","handleFileSelect","event","file","target","files","getImage","console","error","formData","FormData","append","response","fetch","method","body","ok","imageBlob","blob","URL","createObjectURL","status","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ianta/interior_design/interior_design/frontend/src/img_output/ClientImgOut.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction ImageComponent() {\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getImage = async () => {\r\n      try {\r\n        if (!selectedFile) {\r\n          console.error(\"No file selected.\");\r\n          return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", selectedFile);\r\n\r\n        const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n          const imageBlob = await response.blob();\r\n          setImageURL(URL.createObjectURL(imageBlob));\r\n        } else {\r\n          console.error(\"Error retrieving image:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error retrieving image:\", error);\r\n      }\r\n    };\r\n\r\n    getImage();\r\n  }, [selectedFile]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Image here</h2>\r\n      <input type=\"file\" ref={fileInputRef} onChange={handleFileSelect} />\r\n      {imageURL && <img src={imageURL} alt=\"Server Image\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMU,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCN,eAAe,CAACI,IAAI,CAAC;EACvB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,IAAI,CAACR,YAAY,EAAE;UACjBS,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;UAClC;QACF;QAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,YAAY,CAAC;QAEtC,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACvCrB,WAAW,CAACsB,GAAG,CAACC,eAAe,CAACH,SAAS,CAAC,CAAC;QAC7C,CAAC,MAAM;UACLV,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEI,QAAQ,CAACS,MAAM,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDF,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACC,GAAG,EAAE5B,YAAa;MAAC6B,QAAQ,EAAE5B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnE9B,QAAQ,iBAAIH,OAAA;MAAKqC,GAAG,EAAElC,QAAS;MAACmC,GAAG,EAAC;IAAc;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAC/B,EAAA,CA/CQD,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAiDvB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}