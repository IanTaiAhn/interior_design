{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ianta\\\\interior_design\\\\interior_design\\\\frontend\\\\src\\\\img_input\\\\ClientImg.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientImg() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [processedImage, setProcessedImage] = useState(\"\");\n  const csrfToken = Cookies.get(\"csrftoken\");\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        const imageUrl = data.image_url;\n        setProcessedImage(imageUrl);\n        // Use the image URL in your React component\n        console.log(\"Image URL:\", imageUrl);\n        // Perform any additional actions with the image URL\n      } else {\n        console.error(\"Error:\", response.status);\n      }\n      // onFinished();\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(selectedImage),\n        alt: \"Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), processedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pop up here please\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: processedImage,\n        alt: \"Processed Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientImg, \"Ot/akoMnVEPmiBqqsxJqd6T5H1g=\");\n_c = ClientImg;\nexport default ClientImg;\nvar _c;\n$RefreshReg$(_c, \"ClientImg\");","map":{"version":3,"names":["React","useState","useEffect","Cookies","jsxDEV","_jsxDEV","ClientImg","_s","selectedImage","setSelectedImage","processedImage","setProcessedImage","csrfToken","get","handleImageUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","console","log","imageUrl","image_url","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["C:/Users/ianta/interior_design/interior_design/frontend/src/img_input/ClientImg.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction ClientImg() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(\"\");\r\n  const csrfToken = Cookies.get(\"csrftoken\");\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedImage(file);\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/upload/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        const imageUrl = data.image_url;\r\n        setProcessedImage(imageUrl);\r\n        // Use the image URL in your React component\r\n        console.log(\"Image URL:\", imageUrl);\r\n        // Perform any additional actions with the image URL\r\n      } else {\r\n        console.error(\"Error:\", response.status);\r\n      }\r\n      // onFinished();\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Image Uploader</h2>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n      {selectedImage && (\r\n        <div>\r\n          <h3>Selected Image:</h3>\r\n          <img src={URL.createObjectURL(selectedImage)} alt=\"Selected\" />\r\n        </div>\r\n      )}\r\n      {processedImage && (\r\n        <div>\r\n          <h3>Pop up here please</h3>\r\n          <img src={processedImage} alt=\"Processed Image\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ClientImg;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}